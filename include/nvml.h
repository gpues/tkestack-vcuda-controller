#include "nvml-subset.h"
const char* nvmlErrorString(nvmlReturn_t result);
nvmlReturn_t nvmlComputeInstanceDestroy(nvmlComputeInstance_t computeInstance);
nvmlReturn_t nvmlComputeInstanceGetInfo(nvmlComputeInstance_t computeInstance, nvmlComputeInstanceInfo_t* info);
nvmlReturn_t nvmlComputeInstanceGetInfo_v2(nvmlComputeInstance_t computeInstance, nvmlComputeInstanceInfo_t* info);
nvmlReturn_t nvmlDeviceClearAccountingPids(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlDeviceClearCpuAffinity(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlDeviceClearEccErrorCounts(nvmlDevice_t vmDevice, nvmlEccCounterType_t counterType);
nvmlReturn_t nvmlDeviceCreateGpuInstance(nvmlDevice_t vmDevice, unsigned int profileId, nvmlGpuInstance_t* gpuInstance);
nvmlReturn_t nvmlDeviceDiscoverGpus(nvmlPciInfo_t* pciInfo);
nvmlReturn_t nvmlDeviceFreezeNvLinkUtilizationCounter(nvmlDevice_t vmDevice, unsigned int link, unsigned int counter, nvmlEnableState_t freeze);
nvmlReturn_t nvmlDeviceGetAPIRestriction(nvmlDevice_t vmDevice, nvmlRestrictedAPI_t apiType, nvmlEnableState_t* isRestricted);
nvmlReturn_t nvmlDeviceGetAccountingBufferSize(nvmlDevice_t vmDevice, unsigned int* bufferSize);
nvmlReturn_t nvmlDeviceGetAccountingMode(nvmlDevice_t vmDevice, nvmlEnableState_t* mode);
nvmlReturn_t nvmlDeviceGetAccountingPids(nvmlDevice_t vmDevice, unsigned int* count, unsigned int* pids);
nvmlReturn_t nvmlDeviceGetAccountingStats(nvmlDevice_t vmDevice, unsigned int pid, nvmlAccountingStats_t* stats);
nvmlReturn_t nvmlDeviceGetActiveVgpus(nvmlDevice_t vmDevice, unsigned int* vgpuCount, nvmlVgpuInstance_t* vgpuInstances);
nvmlReturn_t nvmlDeviceGetApplicationsClock(nvmlDevice_t vmDevice, nvmlClockType_t clockType, unsigned int* clockMHz);
nvmlReturn_t nvmlDeviceGetArchitecture(nvmlDevice_t vmDevice, nvmlDeviceArchitecture_t* arch);
nvmlReturn_t nvmlDeviceGetAttributes(nvmlDevice_t vmDevice, nvmlDeviceAttributes_t* attributes);
nvmlReturn_t nvmlDeviceGetAttributes_v2(nvmlDevice_t vmDevice, nvmlDeviceAttributes_t* attributes);
nvmlReturn_t nvmlDeviceGetAutoBoostedClocksEnabled(nvmlDevice_t vmDevice, nvmlEnableState_t* isEnabled, nvmlEnableState_t* defaultIsEnabled);
nvmlReturn_t nvmlDeviceGetBAR1MemoryInfo(nvmlDevice_t vmDevice, nvmlBAR1Memory_t* bar1Memory);
nvmlReturn_t nvmlDeviceGetBoardId(nvmlDevice_t vmDevice, unsigned int* boardId);
nvmlReturn_t nvmlDeviceGetBoardPartNumber(nvmlDevice_t vmDevice, char* partNumber, unsigned int length);
nvmlReturn_t nvmlDeviceGetBrand(nvmlDevice_t vmDevice, nvmlBrandType_t* type);
nvmlReturn_t nvmlDeviceGetBridgeChipInfo(nvmlDevice_t vmDevice, nvmlBridgeChipHierarchy_t* bridgeHierarchy);
nvmlReturn_t nvmlDeviceGetClock(nvmlDevice_t vmDevice, nvmlClockType_t clockType, nvmlClockId_t clockId, unsigned int* clockMHz);
nvmlReturn_t nvmlDeviceGetClockInfo(nvmlDevice_t vmDevice, nvmlClockType_t type, unsigned int* clock);
nvmlReturn_t nvmlDeviceGetComputeInstanceId(nvmlDevice_t vmDevice, unsigned int* id);
nvmlReturn_t nvmlDeviceGetComputeMode(nvmlDevice_t vmDevice, nvmlComputeMode_t* mode);
nvmlReturn_t nvmlDeviceGetComputeRunningProcesses(nvmlDevice_t vmDevice, unsigned int* infoCount, nvmlProcessInfo_v1_t* infos);
nvmlReturn_t nvmlDeviceGetComputeRunningProcesses_v2(nvmlDevice_t vmDevice, unsigned int* infoCount, nvmlProcessInfo_v2_t* infos);
nvmlReturn_t nvmlDeviceGetCount(unsigned int* deviceCount);
nvmlReturn_t nvmlDeviceGetCount_v2(unsigned int* deviceCount);
nvmlReturn_t nvmlDeviceGetCpuAffinity(nvmlDevice_t vmDevice, unsigned int cpuSetSize, unsigned long* cpuSet);
nvmlReturn_t nvmlDeviceGetCpuAffinityWithinScope(nvmlDevice_t vmDevice, unsigned int cpuSetSize, unsigned long* cpuSet, nvmlAffinityScope_t scope);
nvmlReturn_t nvmlDeviceGetCreatableVgpus(nvmlDevice_t vmDevice, unsigned int* vgpuCount, nvmlVgpuTypeId_t* vgpuTypeIds);
nvmlReturn_t nvmlDeviceGetCudaComputeCapability(nvmlDevice_t vmDevice, int* major, int* minor);
nvmlReturn_t nvmlDeviceGetCurrPcieLinkGeneration(nvmlDevice_t vmDevice, unsigned int* currLinkGen);
nvmlReturn_t nvmlDeviceGetCurrPcieLinkWidth(nvmlDevice_t vmDevice, unsigned int* currLinkWidth);
nvmlReturn_t nvmlDeviceGetCurrentClocksThrottleReasons(nvmlDevice_t vmDevice, unsigned long long* clocksThrottleReasons);
nvmlReturn_t nvmlDeviceGetDecoderUtilization(nvmlDevice_t vmDevice, unsigned int* utilization, unsigned int* samplingPeriodUs);
nvmlReturn_t nvmlDeviceGetDefaultApplicationsClock(nvmlDevice_t vmDevice, nvmlClockType_t clockType, unsigned int* clockMHz);
nvmlReturn_t nvmlDeviceGetDetailedEccErrors(nvmlDevice_t vmDevice, nvmlMemoryErrorType_t errorType, nvmlEccCounterType_t counterType, nvmlEccErrorCounts_t* eccCounts);
nvmlReturn_t nvmlDeviceGetDeviceHandleFromMigDeviceHandle(nvmlDevice_t migDevice, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetDisplayActive(nvmlDevice_t vmDevice, nvmlEnableState_t* isActive);
nvmlReturn_t nvmlDeviceGetDisplayMode(nvmlDevice_t vmDevice, nvmlEnableState_t* display);
nvmlReturn_t nvmlDeviceGetDriverModel(nvmlDevice_t vmDevice, nvmlDriverModel_t* current, nvmlDriverModel_t* pending);
nvmlReturn_t nvmlDeviceGetEccMode(nvmlDevice_t vmDevice, nvmlEnableState_t* current, nvmlEnableState_t* pending);
nvmlReturn_t nvmlDeviceGetEncoderCapacity(nvmlDevice_t vmDevice, nvmlEncoderType_t encoderQueryType, unsigned int* encoderCapacity);
nvmlReturn_t nvmlDeviceGetEncoderSessions(nvmlDevice_t vmDevice, unsigned int* sessionCount, nvmlEncoderSessionInfo_t* sessionInfos);
nvmlReturn_t nvmlDeviceGetEncoderStats(nvmlDevice_t vmDevice, unsigned int* sessionCount, unsigned int* averageFps, unsigned int* averageLatency);
nvmlReturn_t nvmlDeviceGetEncoderUtilization(nvmlDevice_t vmDevice, unsigned int* utilization, unsigned int* samplingPeriodUs);
nvmlReturn_t nvmlDeviceGetEnforcedPowerLimit(nvmlDevice_t vmDevice, unsigned int* limit);
nvmlReturn_t nvmlDeviceGetFBCSessions(nvmlDevice_t vmDevice, unsigned int* sessionCount, nvmlFBCSessionInfo_t* sessionInfo);
nvmlReturn_t nvmlDeviceGetFBCStats(nvmlDevice_t vmDevice, nvmlFBCStats_t* fbcStats);
nvmlReturn_t nvmlDeviceGetFanSpeed(nvmlDevice_t vmDevice, unsigned int* speed);
nvmlReturn_t nvmlDeviceGetFanSpeed_v2(nvmlDevice_t vmDevice, unsigned int fan, unsigned int* speed);
nvmlReturn_t nvmlDeviceGetFieldValues(nvmlDevice_t vmDevice, int valuesCount, nvmlFieldValue_t* values);
nvmlReturn_t nvmlDeviceGetGpuInstanceById(nvmlDevice_t vmDevice, unsigned int id, nvmlGpuInstance_t* gpuInstance);
nvmlReturn_t nvmlDeviceGetGpuInstanceId(nvmlDevice_t vmDevice, unsigned int* id);
nvmlReturn_t nvmlDeviceGetGpuInstancePossiblePlacements(nvmlDevice_t vmDevice, unsigned int profileId, nvmlGpuInstancePlacement_t* placements, unsigned int* count);
nvmlReturn_t nvmlDeviceGetGpuInstanceProfileInfo(nvmlDevice_t vmDevice, unsigned int profile, nvmlGpuInstanceProfileInfo_t* info);
nvmlReturn_t nvmlDeviceGetGpuInstanceRemainingCapacity(nvmlDevice_t vmDevice, unsigned int profileId, unsigned int* count);
nvmlReturn_t nvmlDeviceGetGpuInstances(nvmlDevice_t vmDevice, unsigned int profileId, nvmlGpuInstance_t* gpuInstances, unsigned int* count);
nvmlReturn_t nvmlDeviceGetGpuOperationMode(nvmlDevice_t vmDevice, nvmlGpuOperationMode_t* current, nvmlGpuOperationMode_t* pending);
nvmlReturn_t nvmlDeviceGetGraphicsRunningProcesses(nvmlDevice_t vmDevice, unsigned int* infoCount, nvmlProcessInfo_v1_t* infos);
nvmlReturn_t nvmlDeviceGetGraphicsRunningProcesses_v2(nvmlDevice_t vmDevice, unsigned int* infoCount, nvmlProcessInfo_v2_t* infos);
nvmlReturn_t nvmlDeviceGetGridLicensableFeatures(nvmlDevice_t vmDevice, nvmlGridLicensableFeatures_t* pGridLicensableFeatures);
nvmlReturn_t nvmlDeviceGetGridLicensableFeatures_v2(nvmlDevice_t vmDevice, nvmlGridLicensableFeatures_t* pGridLicensableFeatures);
nvmlReturn_t nvmlDeviceGetGridLicensableFeatures_v3(nvmlDevice_t vmDevice, nvmlGridLicensableFeatures_t* pGridLicensableFeatures);
nvmlReturn_t nvmlDeviceGetHandleByIndex(unsigned int index, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHandleByIndex_v2(unsigned int index, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHandleByPciBusId(const char* pciBusId, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHandleByPciBusId_v2(const char* pciBusId, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHandleBySerial(const char* serial, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHandleByUUID(const char* uuid, nvmlDevice_t* vmDevice);
nvmlReturn_t nvmlDeviceGetHostVgpuMode(nvmlDevice_t vmDevice, nvmlHostVgpuMode_t* pHostVgpuMode);
nvmlReturn_t nvmlDeviceGetIndex(nvmlDevice_t vmDevice, unsigned int* index);
nvmlReturn_t nvmlDeviceGetInforomConfigurationChecksum(nvmlDevice_t vmDevice, unsigned int* checksum);
nvmlReturn_t nvmlDeviceGetInforomImageVersion(nvmlDevice_t vmDevice, char* version, unsigned int length);
nvmlReturn_t nvmlDeviceGetInforomVersion(nvmlDevice_t vmDevice, nvmlInforomObject_t object, char* version, unsigned int length);
nvmlReturn_t nvmlDeviceGetMPSComputeRunningProcesses(nvmlDevice_t vmDevice, unsigned int* infoCount, nvmlProcessInfo_v1_t* infos);
nvmlReturn_t nvmlDeviceGetMaxClockInfo(nvmlDevice_t vmDevice, nvmlClockType_t type, unsigned int* clock);
nvmlReturn_t nvmlDeviceGetMaxCustomerBoostClock(nvmlDevice_t vmDevice, nvmlClockType_t clockType, unsigned int* clockMHz);
nvmlReturn_t nvmlDeviceGetMaxMigDeviceCount(nvmlDevice_t vmDevice, unsigned int* count);
nvmlReturn_t nvmlDeviceGetMaxPcieLinkGeneration(nvmlDevice_t vmDevice, unsigned int* maxLinkGen);
nvmlReturn_t nvmlDeviceGetMaxPcieLinkWidth(nvmlDevice_t vmDevice, unsigned int* maxLinkWidth);
nvmlReturn_t nvmlDeviceGetMemoryAffinity(nvmlDevice_t vmDevice, unsigned int nodeSetSize, unsigned long* nodeSet, nvmlAffinityScope_t scope);
nvmlReturn_t nvmlDeviceGetMemoryErrorCounter(nvmlDevice_t vmDevice, nvmlMemoryErrorType_t errorType, nvmlEccCounterType_t counterType, nvmlMemoryLocation_t locationType, unsigned long long* count);
nvmlReturn_t nvmlDeviceGetMemoryInfo(nvmlDevice_t vmDevice, nvmlMemory_t* memory);
nvmlReturn_t nvmlDeviceGetMemoryInfo_v2(nvmlDevice_t vmDevice, nvmlMemory_v2_t* memory);
nvmlReturn_t nvmlDeviceGetMigDeviceHandleByIndex(nvmlDevice_t vmDevice, unsigned int index, nvmlDevice_t* migDevice);
nvmlReturn_t nvmlDeviceGetMigMode(nvmlDevice_t vmDevice, unsigned int* currentMode, unsigned int* pendingMode);
nvmlReturn_t nvmlDeviceGetMinorNumber(nvmlDevice_t vmDevice, unsigned int* minorNumber);
nvmlReturn_t nvmlDeviceGetMultiGpuBoard(nvmlDevice_t vmDevice, unsigned int* multiGpuBool);
nvmlReturn_t nvmlDeviceGetName(nvmlDevice_t vmDevice, char* name, unsigned int length);
nvmlReturn_t nvmlDeviceGetNvLinkCapability(nvmlDevice_t vmDevice, unsigned int link, nvmlNvLinkCapability_t capability, unsigned int* capResult);
nvmlReturn_t nvmlDeviceGetNvLinkErrorCounter(nvmlDevice_t vmDevice, unsigned int link, nvmlNvLinkErrorCounter_t counter, unsigned long long* counterValue);
nvmlReturn_t nvmlDeviceGetNvLinkRemotePciInfo(nvmlDevice_t vmDevice, unsigned int link, nvmlPciInfo_t* pci);
nvmlReturn_t nvmlDeviceGetNvLinkRemotePciInfo_v2(nvmlDevice_t vmDevice, unsigned int link, nvmlPciInfo_t* pci);
nvmlReturn_t nvmlDeviceGetNvLinkState(nvmlDevice_t vmDevice, unsigned int link, nvmlEnableState_t* isActive);
nvmlReturn_t nvmlDeviceGetNvLinkUtilizationControl(nvmlDevice_t vmDevice, unsigned int link, unsigned int counter, nvmlNvLinkUtilizationControl_t* control);
nvmlReturn_t nvmlDeviceGetNvLinkUtilizationCounter(nvmlDevice_t vmDevice, unsigned int link, unsigned int counter, unsigned long long* rxcounter, unsigned long long* txcounter);
nvmlReturn_t nvmlDeviceGetNvLinkVersion(nvmlDevice_t vmDevice, unsigned int link, unsigned int* version);
nvmlReturn_t nvmlDeviceGetP2PStatus(nvmlDevice_t device1, nvmlDevice_t device2, nvmlGpuP2PCapsIndex_t p2pIndex, nvmlGpuP2PStatus_t* p2pStatus);
nvmlReturn_t nvmlDeviceGetPciInfo(nvmlDevice_t vmDevice, nvmlPciInfo_t* pci);
nvmlReturn_t nvmlDeviceGetPciInfo_v2(nvmlDevice_t vmDevice, nvmlPciInfo_t* pci);
nvmlReturn_t nvmlDeviceGetPciInfo_v3(nvmlDevice_t vmDevice, nvmlPciInfo_t* pci);
nvmlReturn_t nvmlDeviceGetPcieReplayCounter(nvmlDevice_t vmDevice, unsigned int* value);
nvmlReturn_t nvmlDeviceGetPcieThroughput(nvmlDevice_t vmDevice, nvmlPcieUtilCounter_t counter, unsigned int* value);
nvmlReturn_t nvmlDeviceGetPerformanceState(nvmlDevice_t vmDevice, nvmlPstates_t* pState);
nvmlReturn_t nvmlDeviceGetPersistenceMode(nvmlDevice_t vmDevice, nvmlEnableState_t* mode);
nvmlReturn_t nvmlDeviceGetPgpuMetadataString(nvmlDevice_t vmDevice, char* pgpuMetadata, unsigned int* bufferSize);
nvmlReturn_t nvmlDeviceGetPowerManagementDefaultLimit(nvmlDevice_t vmDevice, unsigned int* defaultLimit);
nvmlReturn_t nvmlDeviceGetPowerManagementLimit(nvmlDevice_t vmDevice, unsigned int* limit);
nvmlReturn_t nvmlDeviceGetPowerManagementLimitConstraints(nvmlDevice_t vmDevice, unsigned int* minLimit, unsigned int* maxLimit);
nvmlReturn_t nvmlDeviceGetPowerManagementMode(nvmlDevice_t vmDevice, nvmlEnableState_t* mode);
nvmlReturn_t nvmlDeviceGetPowerState(nvmlDevice_t vmDevice, nvmlPstates_t* pState);
nvmlReturn_t nvmlDeviceGetPowerUsage(nvmlDevice_t vmDevice, unsigned int* power);
nvmlReturn_t nvmlDeviceGetProcessUtilization(nvmlDevice_t vmDevice, nvmlProcessUtilizationSample_t* utilization, unsigned int* processSamplesCount, unsigned long long lastSeenTimeStamp);
nvmlReturn_t nvmlDeviceGetRemappedRows(nvmlDevice_t vmDevice, unsigned int* corrRows, unsigned int* uncRows, unsigned int* isPending, unsigned int* failureOccurred);
nvmlReturn_t nvmlDeviceGetRetiredPages(nvmlDevice_t vmDevice, nvmlPageRetirementCause_t cause, unsigned int* pageCount, unsigned long long* addresses);
nvmlReturn_t nvmlDeviceGetRetiredPagesPendingStatus(nvmlDevice_t vmDevice, nvmlEnableState_t* isPending);
nvmlReturn_t nvmlDeviceGetRetiredPages_v2(nvmlDevice_t vmDevice, nvmlPageRetirementCause_t cause, unsigned int* pageCount, unsigned long long* addresses, unsigned long long* timestamps);
nvmlReturn_t nvmlDeviceGetRowRemapperHistogram(nvmlDevice_t vmDevice, nvmlRowRemapperHistogramValues_t* values);
nvmlReturn_t nvmlDeviceGetSamples(nvmlDevice_t vmDevice, nvmlSamplingType_t type, unsigned long long lastSeenTimeStamp, nvmlValueType_t* sampleValType, unsigned int* sampleCount, nvmlSample_t* samples);
nvmlReturn_t nvmlDeviceGetSerial(nvmlDevice_t vmDevice, char* serial, unsigned int length);
nvmlReturn_t nvmlDeviceGetSupportedClocksThrottleReasons(nvmlDevice_t vmDevice, unsigned long long* supportedClocksThrottleReasons);
nvmlReturn_t nvmlDeviceGetSupportedEventTypes(nvmlDevice_t vmDevice, unsigned long long* eventTypes);
nvmlReturn_t nvmlDeviceGetSupportedGraphicsClocks(nvmlDevice_t vmDevice, unsigned int memoryClockMHz, unsigned int* count, unsigned int* clocksMHz);
nvmlReturn_t nvmlDeviceGetSupportedMemoryClocks(nvmlDevice_t vmDevice, unsigned int* count, unsigned int* clocksMHz);
nvmlReturn_t nvmlDeviceGetSupportedVgpus(nvmlDevice_t vmDevice, unsigned int* vgpuCount, nvmlVgpuTypeId_t* vgpuTypeIds);
nvmlReturn_t nvmlDeviceGetTemperature(nvmlDevice_t vmDevice, nvmlTemperatureSensors_t sensorType, unsigned int* temp);
nvmlReturn_t nvmlDeviceGetTemperatureThreshold(nvmlDevice_t vmDevice, nvmlTemperatureThresholds_t thresholdType, unsigned int* temp);
nvmlReturn_t nvmlDeviceGetTopologyCommonAncestor(nvmlDevice_t device1, nvmlDevice_t device2, nvmlGpuTopologyLevel_t* pathInfo);
nvmlReturn_t nvmlDeviceGetTopologyNearestGpus(nvmlDevice_t vmDevice, nvmlGpuTopologyLevel_t level, unsigned int* count, nvmlDevice_t* deviceArray);
nvmlReturn_t nvmlDeviceGetTotalEccErrors(nvmlDevice_t vmDevice, nvmlMemoryErrorType_t errorType, nvmlEccCounterType_t counterType, unsigned long long* eccCounts);
nvmlReturn_t nvmlDeviceGetTotalEnergyConsumption(nvmlDevice_t vmDevice, unsigned long long* energy);
nvmlReturn_t nvmlDeviceGetUUID(nvmlDevice_t vmDevice, char* uuid, unsigned int length);
nvmlReturn_t nvmlDeviceGetUtilizationRates(nvmlDevice_t vmDevice, nvmlUtilization_t* utilization);
nvmlReturn_t nvmlDeviceGetVbiosVersion(nvmlDevice_t vmDevice, char* version, unsigned int length);
nvmlReturn_t nvmlDeviceGetVgpuMetadata(nvmlDevice_t vmDevice, nvmlVgpuPgpuMetadata_t* pgpuMetadata, unsigned int* bufferSize);
nvmlReturn_t nvmlDeviceGetVgpuProcessUtilization(nvmlDevice_t vmDevice, unsigned long long lastSeenTimeStamp, unsigned int* vgpuProcessSamplesCount, nvmlVgpuProcessUtilizationSample_t* utilizationSamples);
nvmlReturn_t nvmlDeviceGetVgpuUtilization(nvmlDevice_t vmDevice, unsigned long long lastSeenTimeStamp, nvmlValueType_t* sampleValType, unsigned int* vgpuInstanceSamplesCount, nvmlVgpuInstanceUtilizationSample_t* utilizationSamples);
nvmlReturn_t nvmlDeviceGetViolationStatus(nvmlDevice_t vmDevice, nvmlPerfPolicyType_t perfPolicyType, nvmlViolationTime_t* violTime);
nvmlReturn_t nvmlDeviceGetVirtualizationMode(nvmlDevice_t vmDevice, nvmlGpuVirtualizationMode_t* pVirtualMode);
nvmlReturn_t nvmlDeviceIsMigDeviceHandle(nvmlDevice_t vmDevice, unsigned int* isMigDevice);
nvmlReturn_t nvmlDeviceModifyDrainState(nvmlPciInfo_t* pciInfo, nvmlEnableState_t newState);
nvmlReturn_t nvmlDeviceOnSameBoard(nvmlDevice_t device1, nvmlDevice_t device2, int* onSameBoard);
nvmlReturn_t nvmlDeviceQueryDrainState(nvmlPciInfo_t* pciInfo, nvmlEnableState_t* currentState);
nvmlReturn_t nvmlDeviceRegisterEvents(nvmlDevice_t vmDevice, unsigned long long eventTypes, nvmlEventSet_t set);
nvmlReturn_t nvmlDeviceRemoveGpu(nvmlPciInfo_t* pciInfo);
nvmlReturn_t nvmlDeviceRemoveGpu_v2(nvmlPciInfo_t* pciInfo, nvmlDetachGpuState_t gpuState, nvmlPcieLinkState_t linkState);
nvmlReturn_t nvmlDeviceResetApplicationsClocks(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlDeviceResetGpuLockedClocks(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlDeviceResetNvLinkErrorCounters(nvmlDevice_t vmDevice, unsigned int link);
nvmlReturn_t nvmlDeviceResetNvLinkUtilizationCounter(nvmlDevice_t vmDevice, unsigned int link, unsigned int counter);
nvmlReturn_t nvmlDeviceSetAPIRestriction(nvmlDevice_t vmDevice, nvmlRestrictedAPI_t apiType, nvmlEnableState_t isRestricted);
nvmlReturn_t nvmlDeviceSetAccountingMode(nvmlDevice_t vmDevice, nvmlEnableState_t mode);
nvmlReturn_t nvmlDeviceSetApplicationsClocks(nvmlDevice_t vmDevice, unsigned int memClockMHz, unsigned int graphicsClockMHz);
nvmlReturn_t nvmlDeviceSetAutoBoostedClocksEnabled(nvmlDevice_t vmDevice, nvmlEnableState_t enabled);
nvmlReturn_t nvmlDeviceSetComputeMode(nvmlDevice_t vmDevice, nvmlComputeMode_t mode);
nvmlReturn_t nvmlDeviceSetCpuAffinity(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlDeviceSetDefaultAutoBoostedClocksEnabled(nvmlDevice_t vmDevice, nvmlEnableState_t enabled, unsigned int flags);
nvmlReturn_t nvmlDeviceSetDriverModel(nvmlDevice_t vmDevice, nvmlDriverModel_t driverModel, unsigned int flags);
nvmlReturn_t nvmlDeviceSetEccMode(nvmlDevice_t vmDevice, nvmlEnableState_t ecc);
nvmlReturn_t nvmlDeviceSetGpuLockedClocks(nvmlDevice_t vmDevice, unsigned int minGpuClockMHz, unsigned int maxGpuClockMHz);
nvmlReturn_t nvmlDeviceSetGpuOperationMode(nvmlDevice_t vmDevice, nvmlGpuOperationMode_t mode);
nvmlReturn_t nvmlDeviceSetMigMode(nvmlDevice_t vmDevice, unsigned int mode, nvmlReturn_t* activationStatus);
nvmlReturn_t nvmlDeviceSetNvLinkUtilizationControl(nvmlDevice_t vmDevice, unsigned int link, unsigned int counter, nvmlNvLinkUtilizationControl_t* control, unsigned int reset);
nvmlReturn_t nvmlDeviceSetPersistenceMode(nvmlDevice_t vmDevice, nvmlEnableState_t mode);
nvmlReturn_t nvmlDeviceSetPowerManagementLimit(nvmlDevice_t vmDevice, unsigned int limit);
nvmlReturn_t nvmlDeviceSetTemperatureThreshold(nvmlDevice_t vmDevice, nvmlTemperatureThresholds_t thresholdType, int* temp);
nvmlReturn_t nvmlDeviceSetVirtualizationMode(nvmlDevice_t vmDevice, nvmlGpuVirtualizationMode_t virtualMode);
nvmlReturn_t nvmlDeviceValidateInforom(nvmlDevice_t vmDevice);
nvmlReturn_t nvmlEventSetCreate(nvmlEventSet_t* set);
nvmlReturn_t nvmlEventSetFree(nvmlEventSet_t set);
nvmlReturn_t nvmlEventSetWait(nvmlEventSet_t set, nvmlEventData_t* data, unsigned int timeoutms);
nvmlReturn_t nvmlEventSetWait_v2(nvmlEventSet_t set, nvmlEventData_t* data, unsigned int timeoutms);
nvmlReturn_t nvmlGetVgpuCompatibility(nvmlVgpuMetadata_t* vgpuMetadata, nvmlVgpuPgpuMetadata_t* pgpuMetadata, nvmlVgpuPgpuCompatibility_t* compatibilityInfo);
nvmlReturn_t nvmlGetVgpuVersion(nvmlVgpuVersion_t* supported, nvmlVgpuVersion_t* current);
nvmlReturn_t nvmlGpuInstanceCreateComputeInstance(nvmlGpuInstance_t gpuInstance, unsigned int profileId, nvmlComputeInstance_t* computeInstance);
nvmlReturn_t nvmlGpuInstanceDestroy(nvmlGpuInstance_t gpuInstance);
nvmlReturn_t nvmlGpuInstanceGetComputeInstanceById(nvmlGpuInstance_t gpuInstance, unsigned int id, nvmlComputeInstance_t* computeInstance);
nvmlReturn_t nvmlGpuInstanceGetComputeInstanceProfileInfo(nvmlGpuInstance_t gpuInstance, unsigned int profile, unsigned int engProfile, nvmlComputeInstanceProfileInfo_t* info);
nvmlReturn_t nvmlGpuInstanceGetComputeInstanceRemainingCapacity(nvmlGpuInstance_t gpuInstance, unsigned int profileId, unsigned int* count);
nvmlReturn_t nvmlGpuInstanceGetComputeInstances(nvmlGpuInstance_t gpuInstance, unsigned int profileId, nvmlComputeInstance_t* computeInstances, unsigned int* count);
nvmlReturn_t nvmlGpuInstanceGetInfo(nvmlGpuInstance_t gpuInstance, nvmlGpuInstanceInfo_t* info);
nvmlReturn_t nvmlInit(void);
nvmlReturn_t nvmlInitWithFlags(unsigned int flags);
nvmlReturn_t nvmlInit_v2(void);
nvmlReturn_t nvmlSetVgpuVersion(nvmlVgpuVersion_t* vgpuVersion);
nvmlReturn_t nvmlShutdown(void);
nvmlReturn_t nvmlSystemGetCudaDriverVersion(int* cudaDriverVersion);
nvmlReturn_t nvmlSystemGetCudaDriverVersion_v2(int* cudaDriverVersion);
nvmlReturn_t nvmlSystemGetDriverVersion(char* version, unsigned int length);
nvmlReturn_t nvmlSystemGetHicVersion(unsigned int* hwbcCount, nvmlHwbcEntry_t* hwbcEntries);
nvmlReturn_t nvmlSystemGetNVMLVersion(char* version, unsigned int length);
nvmlReturn_t nvmlSystemGetProcessName(unsigned int pid, char* name, unsigned int length);
nvmlReturn_t nvmlSystemGetTopologyGpuSet(unsigned int cpuNumber, unsigned int* count, nvmlDevice_t* deviceArray);
nvmlReturn_t nvmlUnitGetCount(unsigned int* unitCount);
nvmlReturn_t nvmlUnitGetDevices(nvmlUnit_t unit, unsigned int* deviceCount, nvmlDevice_t* devices);
nvmlReturn_t nvmlUnitGetFanSpeedInfo(nvmlUnit_t unit, nvmlUnitFanSpeeds_t* fanSpeeds);
nvmlReturn_t nvmlUnitGetHandleByIndex(unsigned int index, nvmlUnit_t* unit);
nvmlReturn_t nvmlUnitGetLedState(nvmlUnit_t unit, nvmlLedState_t* state);
nvmlReturn_t nvmlUnitGetPsuInfo(nvmlUnit_t unit, nvmlPSUInfo_t* psu);
nvmlReturn_t nvmlUnitGetTemperature(nvmlUnit_t unit, unsigned int type, unsigned int* temp);
nvmlReturn_t nvmlUnitGetUnitInfo(nvmlUnit_t unit, nvmlUnitInfo_t* info);
nvmlReturn_t nvmlUnitSetLedState(nvmlUnit_t unit, nvmlLedColor_t color);
nvmlReturn_t nvmlVgpuInstanceClearAccountingPids(nvmlVgpuInstance_t vgpuInstance);
nvmlReturn_t nvmlVgpuInstanceGetAccountingMode(nvmlVgpuInstance_t vgpuInstance, nvmlEnableState_t* mode);
nvmlReturn_t nvmlVgpuInstanceGetAccountingPids(nvmlVgpuInstance_t vgpuInstance, unsigned int* count, unsigned int* pids);
nvmlReturn_t nvmlVgpuInstanceGetAccountingStats(nvmlVgpuInstance_t vgpuInstance, unsigned int pid, nvmlAccountingStats_t* stats);
nvmlReturn_t nvmlVgpuInstanceGetEccMode(nvmlVgpuInstance_t vgpuInstance, nvmlEnableState_t* eccMode);
nvmlReturn_t nvmlVgpuInstanceGetEncoderCapacity(nvmlVgpuInstance_t vgpuInstance, unsigned int* encoderCapacity);
nvmlReturn_t nvmlVgpuInstanceGetEncoderSessions(nvmlVgpuInstance_t vgpuInstance, unsigned int* sessionCount, nvmlEncoderSessionInfo_t* sessionInfo);
nvmlReturn_t nvmlVgpuInstanceGetEncoderStats(nvmlVgpuInstance_t vgpuInstance, unsigned int* sessionCount, unsigned int* averageFps, unsigned int* averageLatency);
nvmlReturn_t nvmlVgpuInstanceGetFBCSessions(nvmlVgpuInstance_t vgpuInstance, unsigned int* sessionCount, nvmlFBCSessionInfo_t* sessionInfo);
nvmlReturn_t nvmlVgpuInstanceGetFBCStats(nvmlVgpuInstance_t vgpuInstance, nvmlFBCStats_t* fbcStats);
nvmlReturn_t nvmlVgpuInstanceGetFbUsage(nvmlVgpuInstance_t vgpuInstance, unsigned long long* fbUsage);
nvmlReturn_t nvmlVgpuInstanceGetFrameRateLimit(nvmlVgpuInstance_t vgpuInstance, unsigned int* frameRateLimit);
nvmlReturn_t nvmlVgpuInstanceGetGpuInstanceId(nvmlVgpuInstance_t vgpuInstance, unsigned int* gpuInstanceId);
nvmlReturn_t nvmlVgpuInstanceGetLicenseStatus(nvmlVgpuInstance_t vgpuInstance, unsigned int* licensed);
nvmlReturn_t nvmlVgpuInstanceGetMdevUUID(nvmlVgpuInstance_t vgpuInstance, char* mdevUuid, unsigned int size);
nvmlReturn_t nvmlVgpuInstanceGetMetadata(nvmlVgpuInstance_t vgpuInstance, nvmlVgpuMetadata_t* vgpuMetadata, unsigned int* bufferSize);
nvmlReturn_t nvmlVgpuInstanceGetType(nvmlVgpuInstance_t vgpuInstance, nvmlVgpuTypeId_t* vgpuTypeId);
nvmlReturn_t nvmlVgpuInstanceGetUUID(nvmlVgpuInstance_t vgpuInstance, char* uuid, unsigned int size);
nvmlReturn_t nvmlVgpuInstanceGetVmDriverVersion(nvmlVgpuInstance_t vgpuInstance, char* version, unsigned int length);
nvmlReturn_t nvmlVgpuInstanceGetVmID(nvmlVgpuInstance_t vgpuInstance, char* vmId, unsigned int size, nvmlVgpuVmIdType_t* vmIdType);
nvmlReturn_t nvmlVgpuInstanceSetEncoderCapacity(nvmlVgpuInstance_t vgpuInstance, unsigned int encoderCapacity);
nvmlReturn_t nvmlVgpuTypeGetClass(nvmlVgpuTypeId_t vgpuTypeId, char* vgpuTypeClass, unsigned int* size);
nvmlReturn_t nvmlVgpuTypeGetDeviceID(nvmlVgpuTypeId_t vgpuTypeId, unsigned long long* deviceID, unsigned long long* subsystemID);
nvmlReturn_t nvmlVgpuTypeGetFrameRateLimit(nvmlVgpuTypeId_t vgpuTypeId, unsigned int* frameRateLimit);
nvmlReturn_t nvmlVgpuTypeGetFramebufferSize(nvmlVgpuTypeId_t vgpuTypeId, unsigned long long* fbSize);
nvmlReturn_t nvmlVgpuTypeGetGpuInstanceProfileId(nvmlVgpuTypeId_t vgpuTypeId, unsigned int* gpuInstanceProfileId);
nvmlReturn_t nvmlVgpuTypeGetLicense(nvmlVgpuTypeId_t vgpuTypeId, char* vgpuTypeLicenseString, unsigned int size);
nvmlReturn_t nvmlVgpuTypeGetMaxInstances(nvmlDevice_t vmDevice, nvmlVgpuTypeId_t vgpuTypeId, unsigned int* vgpuInstanceCount);
nvmlReturn_t nvmlVgpuTypeGetMaxInstancesPerVm(nvmlVgpuTypeId_t vgpuTypeId, unsigned int* vgpuInstanceCountPerVm);
nvmlReturn_t nvmlVgpuTypeGetName(nvmlVgpuTypeId_t vgpuTypeId, char* vgpuTypeName, unsigned int* size);
nvmlReturn_t nvmlVgpuTypeGetNumDisplayHeads(nvmlVgpuTypeId_t vgpuTypeId, unsigned int* numDisplayHeads);
nvmlReturn_t nvmlVgpuTypeGetResolution(nvmlVgpuTypeId_t vgpuTypeId, unsigned int displayIndex, unsigned int* xdim, unsigned int* ydim);
nvmlReturn_t nvmlInternalGetExportTable(const void** ppExportTable, void* pExportTableId);
